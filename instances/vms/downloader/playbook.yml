- name: Setup downloader
  hosts: default
  remote_user: toor
  collections:
    - professorsalty.homelab
  vars_files:
    - ../vm-vars.yml

  tasks:
    - name: Set the hostname
      include_role:
        name: set_hostname
      vars:
        hostname: downloader
        localdomain: "{{ localdomain }}"

    - name: Mount the drives
      include_role:
        name: create_filesystem
      vars: 
        drives:
          - device: sdb
            mount_point: bigdrive
          - device: sdc
            mount_point: intermediate
            
    - name: Mount samba shares
      include_role:
        name: mount_smb_shares
      vars:
        smb_credentials:
          - username: mediauser
            password:
            sharepath: media

    - name: Allow ports 
      include_role:
        name: ufw_allow_ports
      vars:
        configs:
          - service: Sonarr
            port: "{{ sonarr_port }}"
          - service: Radarr
            port: "{{ radarr_port }}"
          - service: Lidarr
            port: "{{ lidarr_port }}"
          - service: Bazarr
            port: "{{ bazarr_port }}"
          - service: Mylarr
            port: "{{ mylarr_port }}"
          - service: Prowlarr
            port: "{{ prowlarr_port }}"
          - service: Ombi
            port: "{{ ombi_port }}"
          - service: Readarr
            port: "{{ readarr_port }}"
          - service: NZBGet
            port: "{{ nzbget_port }}"

    - name: Start Sonarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/sonarr:preview
        name: sonarr
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        published_ports:
          - "{{ sonarr_port }}:8989"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${SONARR_ROOT:-sonarr}/config:/config"
          - "{{ SHOWS_ROOT }}:/tv"
          - "{{ FINISHED_DOWNLOADS }}:/downloads"
        restart: always

    - name: Start Radarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/radarr:latest
        name: radarr
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        published_ports:
          - "{{ radarr_port }}:7878"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${RADARR_ROOT:-radarr}/config:/config"
          - "{{ MOVIES_ROOT }}:/movies"
          - "{{ FINISHED_DOWNLOADS }}:/downloads"
        restart_policy: always

    - name: Start Lidarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/lidarr
        name: lidarr
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        published_ports:
          - "{{ lidarr_port }}:8686"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${LIDARR_ROOT:-lidarr}/config:/config"
          - "{{ MUSIC_ROOT }}:/music"
          - "{{ FINISHED_DOWNLOADS }}:/downloads"
        restart_policy: always

    - name: Start Bazarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/bazarr
        name: bazarr
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        published_ports:
          - "{{ bazarr_port }}:6767"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${BAZARR_ROOT:-bazzar}/config:/config"
          - "{{ MOVIES_ROOT }}:/movies"
          - "{{ SHOWS_ROOT }}:/tv"
        restart_policy: always

    - name: Start Mylarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/mylar3
        name: mylar
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${MYLAR_ROOT:-mylar}:/config"
          - "{{ COMICS_ROOT }}:/comics"
          - "{{ FINISHED_DOWNLOADS }}:/downloads"
        published_ports:
          - "{{ mylarr_port }}:8090"
        restart_policy: always

    - name: Start Ombi
      community.general.docker_container:
        image: ghcr.io/linuxserver/ombi
        name: ombi
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        published_ports:
          - "{{ ombi_port }}:3579"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${OMBI_ROOT:-ombi}:/config"
        restart_policy: always

    - name: Start Readarr
      community.general.docker_container:
        image: hotio/readarr:nightly
        name: readarr
        restart_policy: always
        published_ports:
          - "{{ readarr_port }}:8787"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${READARR_ROOT:-readarr}:/config"
          - "{{ BOOKS_ROOT }}:/books"
          - "{{ AUDIOBOOKS_ROOT }}:/audiobooks"
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"

    - name: Start NZBGet
      community.general.docker_container:
        image: ghcr.io/linuxserver/nzbget
        name: nzbget
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ SERVICES_ROOT }}/${NABGET_ROOT:-nzbget}:/config"
          - "{{ INTERMEDIATE_DOWNLOADS }}:/intermediate"
          - "{{ FINISHED_DOWNLOADS }}:/downloads"
        published_ports:
          - "{{ nzbget_port }}:6789"
        restart_policy: always

    - name: Prowlarr
      community.general.docker_container:
        image: ghcr.io/linuxserver/prowlarr:develop
        name: prowlarr
        env:
          PUID: "{{ lookup('env', 'UID') | default(1000, true) }}"
          PGID: "{{ lookup('env', 'GID') | default(1000, true) }}"
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - /path/to/data:/config
        published_ports:
          - "{{ prowlarr_port }}:9696"
        restart_policy: always

    - name: Run watchtower with proxy
      include_role:
        name: run_watchtower